{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xEbAe80bE01b972E9b40390813E01f40c5CB4C4BF",
      "txHash": "0x16c6e844cf9fdeb4ff4e1d139f1705a313066e46f9f016b356d07c42849d1050",
      "kind": "uups"
    }
  ],
  "impls": {
    "183e7e3b988939de67a20041e8930180352a4f6dadf521fd2698a9c0c3fd0490": {
      "address": "0x17f649AF42B152501D535542C3e8695bB453A0Ca",
      "txHash": "0xc96cc880ab6e69f8356685fcbc368ad450ff7557e1c9d69390174a845d87fe0a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2424_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "ownerFeeRecipient",
            "offset": 0,
            "slot": "504",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:63"
          },
          {
            "label": "marketingFeeRecipient",
            "offset": 0,
            "slot": "505",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:64"
          },
          {
            "label": "devFeeRecipient",
            "offset": 0,
            "slot": "506",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:65"
          },
          {
            "label": "ownerFeePercent",
            "offset": 20,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:67"
          },
          {
            "label": "marketingFeePercent",
            "offset": 21,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:68"
          },
          {
            "label": "devFeePercent",
            "offset": 22,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:69"
          },
          {
            "label": "liquidityFeePercent",
            "offset": 23,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:70"
          },
          {
            "label": "totalOwnerAmount",
            "offset": 0,
            "slot": "507",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:73"
          },
          {
            "label": "totalMarketingAmount",
            "offset": 0,
            "slot": "508",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:74"
          },
          {
            "label": "totalDevAmount",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:75"
          },
          {
            "label": "totalLiquidity",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:76"
          },
          {
            "label": "airdropTokens",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:78"
          },
          {
            "label": "isExcludedFee",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:80"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:81"
          },
          {
            "label": "isWalletLimitUnlimited",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:82"
          },
          {
            "label": "walletsLimit",
            "offset": 0,
            "slot": "515",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:84"
          },
          {
            "label": "isWalletsLimitEnabled",
            "offset": 1,
            "slot": "515",
            "type": "t_bool",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:85"
          },
          {
            "label": "uniswapV2Router",
            "offset": 2,
            "slot": "515",
            "type": "t_contract(IUniswapV2Router02)4911",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:87"
          },
          {
            "label": "pairAddr",
            "offset": 0,
            "slot": "516",
            "type": "t_address",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:89"
          },
          {
            "label": "pairAddress",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:90"
          },
          {
            "label": "txCounter",
            "offset": 0,
            "slot": "518",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:91"
          },
          {
            "label": "txTrigger",
            "offset": 0,
            "slot": "519",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUniswapV2Router02)4911": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2424_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2424_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6c1a156df1ed94ad518620c3b0b073ba2bb3467d7c83ad6e9d5dd7d98d8b929f": {
      "address": "0x58a5428070904cd175e8A5e321A40613106018A5",
      "txHash": "0x546f8a842ad7bad1021996b3a1035786868579a3db30d4b5606c8ea60dd1903e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2424_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "ownerFeeRecipient",
            "offset": 0,
            "slot": "504",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:63"
          },
          {
            "label": "marketingFeeRecipient",
            "offset": 0,
            "slot": "505",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:64"
          },
          {
            "label": "devFeeRecipient",
            "offset": 0,
            "slot": "506",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:65"
          },
          {
            "label": "ownerFeePercent",
            "offset": 20,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:67"
          },
          {
            "label": "marketingFeePercent",
            "offset": 21,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:68"
          },
          {
            "label": "devFeePercent",
            "offset": 22,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:69"
          },
          {
            "label": "liquidityFeePercent",
            "offset": 23,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:70"
          },
          {
            "label": "totalOwnerAmount",
            "offset": 0,
            "slot": "507",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:73"
          },
          {
            "label": "totalMarketingAmount",
            "offset": 0,
            "slot": "508",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:74"
          },
          {
            "label": "totalDevAmount",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:75"
          },
          {
            "label": "totalLiquidity",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:76"
          },
          {
            "label": "airdropTokens",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:78"
          },
          {
            "label": "isExcludedFee",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:80"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:81"
          },
          {
            "label": "isWalletLimitUnlimited",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:82"
          },
          {
            "label": "walletsLimit",
            "offset": 0,
            "slot": "515",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:84"
          },
          {
            "label": "isWalletsLimitEnabled",
            "offset": 1,
            "slot": "515",
            "type": "t_bool",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:85"
          },
          {
            "label": "uniswapV2Router",
            "offset": 2,
            "slot": "515",
            "type": "t_contract(IUniswapV2Router02)5902",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:87"
          },
          {
            "label": "pairAddr",
            "offset": 0,
            "slot": "516",
            "type": "t_address",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:89"
          },
          {
            "label": "pairAddress",
            "offset": 0,
            "slot": "517",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:90"
          },
          {
            "label": "txCounter",
            "offset": 0,
            "slot": "518",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:91"
          },
          {
            "label": "txTrigger",
            "offset": 0,
            "slot": "519",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUniswapV2Router02)5902": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2424_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2424_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "56cdb25a62c5736421c3468ac299d0f5712c6b9632f4a55d3d3e0f70f522a046": {
      "address": "0x2b41665646533528A051733E28A3eb25C1f09da2",
      "txHash": "0x1b4dfb6e75dd69491e82b7d46dbe7a1345d0bc9baab779318466d025d661529a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2424_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "ownerFeeRecipient",
            "offset": 0,
            "slot": "504",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:63"
          },
          {
            "label": "marketingFeeRecipient",
            "offset": 0,
            "slot": "505",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:64"
          },
          {
            "label": "devFeeRecipient",
            "offset": 0,
            "slot": "506",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:65"
          },
          {
            "label": "ownerFeePercent",
            "offset": 20,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:67"
          },
          {
            "label": "marketingFeePercent",
            "offset": 21,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:68"
          },
          {
            "label": "devFeePercent",
            "offset": 22,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:69"
          },
          {
            "label": "liquidityFeePercent",
            "offset": 23,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:70"
          },
          {
            "label": "totalOwnerAmount",
            "offset": 0,
            "slot": "507",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:73"
          },
          {
            "label": "totalMarketingAmount",
            "offset": 0,
            "slot": "508",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:74"
          },
          {
            "label": "totalDevAmount",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:75"
          },
          {
            "label": "totalLiquidity",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:76"
          },
          {
            "label": "airdropTokens",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:78"
          },
          {
            "label": "isExcludedFee",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:80"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:81"
          },
          {
            "label": "isWalletLimitUnlimited",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:82"
          },
          {
            "label": "walletsLimit",
            "offset": 0,
            "slot": "515",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:84"
          },
          {
            "label": "isWalletsLimitEnabled",
            "offset": 1,
            "slot": "515",
            "type": "t_bool",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:85"
          },
          {
            "label": "uniswapV2Router",
            "offset": 2,
            "slot": "515",
            "type": "t_contract(IUniswapV2Router02)4911",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:87"
          },
          {
            "label": "pairAddress",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:90"
          },
          {
            "label": "txCounter",
            "offset": 0,
            "slot": "517",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:91"
          },
          {
            "label": "txTrigger",
            "offset": 0,
            "slot": "518",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUniswapV2Router02)4911": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2424_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2424_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "52ff1ceba0b18b2fe6c2a776aa4614cd779f6b2fac889954854be4a59e94a11a": {
      "address": "0x85AFbFf57435535aCDd9B139FF06778304894812",
      "txHash": "0x3ab4812592d3258c25851ec64e8d09c07a06f0327f3f782c8a27bc9dd30a428d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2424_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "ownerFeeRecipient",
            "offset": 0,
            "slot": "504",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:63"
          },
          {
            "label": "marketingFeeRecipient",
            "offset": 0,
            "slot": "505",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:64"
          },
          {
            "label": "devFeeRecipient",
            "offset": 0,
            "slot": "506",
            "type": "t_address_payable",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:65"
          },
          {
            "label": "ownerFeePercent",
            "offset": 20,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:67"
          },
          {
            "label": "marketingFeePercent",
            "offset": 21,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:68"
          },
          {
            "label": "devFeePercent",
            "offset": 22,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:69"
          },
          {
            "label": "liquidityFeePercent",
            "offset": 23,
            "slot": "506",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:70"
          },
          {
            "label": "totalOwnerAmount",
            "offset": 0,
            "slot": "507",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:73"
          },
          {
            "label": "totalMarketingAmount",
            "offset": 0,
            "slot": "508",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:74"
          },
          {
            "label": "totalDevAmount",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:75"
          },
          {
            "label": "totalLiquidity",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:76"
          },
          {
            "label": "airdropTokens",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:78"
          },
          {
            "label": "isExcludedFee",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:80"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:81"
          },
          {
            "label": "isWalletLimitUnlimited",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:82"
          },
          {
            "label": "walletsLimit",
            "offset": 0,
            "slot": "515",
            "type": "t_uint8",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:84"
          },
          {
            "label": "isWalletsLimitEnabled",
            "offset": 1,
            "slot": "515",
            "type": "t_bool",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:85"
          },
          {
            "label": "uniswapV2Router",
            "offset": 2,
            "slot": "515",
            "type": "t_contract(IUniswapV2Router02)5902",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:87"
          },
          {
            "label": "pairAddress",
            "offset": 0,
            "slot": "516",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:90"
          },
          {
            "label": "txCounter",
            "offset": 0,
            "slot": "517",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:91"
          },
          {
            "label": "txTrigger",
            "offset": 0,
            "slot": "518",
            "type": "t_uint256",
            "contract": "TokenName",
            "src": "contracts/TokenName.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUniswapV2Router02)5902": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2424_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2424_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
